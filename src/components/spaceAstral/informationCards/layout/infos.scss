
@import "../../../../layouts/colors";
@import "../../../../layouts/button_styles";

@mixin article-style {
    // style for the inner sections
    section {
        color: $gray;
        font-size: 0.4em;
        &:nth-child(1){
            display: flex;
            height: 100%;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            text-align: center;
            gap: 1em;
            div {
                display: flex;
                justify-content: center;
                gap: 2em;
            }

            button{
                padding: 0.3em 0.8em;
                border-radius: 0.4em;
                font-size: 0.8em;
                z-index: 1;
                font-family: "Poppins", sans-serif;
                color: map-get($map: $blue-planet, $key: text );
                
                transition: all 200ms;
                background-color: black;
                border: solid map-get($map: $blue-planet, $key: secondary);
                @include color-swap-button()
                // @include button-spin-style() ;
            }


            button:hover {
                border-color: transparent;
                color: map-get($map: $purple-haze, $key: text );
                scale: 0.98;
            }
        }

        &:nth-child(2){
            margin: 0 0.5em;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-around;
            height: 100%;
            overflow: hidden;
        }
    }
}


#project-container {
    position: absolute;
    z-index: 7;
    inset: 0;
    background: linear-gradient(to right, rgba(0, 0, 0, 0.811), rgba(0, 0, 0, 0.745));
    
    border: solid $bright-green;
    display: flex;
    align-items: center;
    justify-content: center;
    
    picture{
        margin-top: 5em;
    }
    
  
    img{
        width: 110%;
        aspect-ratio: 1.2857;
    }


    article {
        width: 75%;
        height: 80%;
        border-radius: 0.3em;

        border: solid #4f4f4f;
        
        background: linear-gradient(to right, transparent, #141414b0 0%), url("../../../../assets/green_nebula.webp");
        background-repeat: no-repeat;
        background-position: center;
        background-size: 100% auto;

        display: grid;
        grid-template-columns: 40% 60%;
        @include article-style()
    }
}


@mixin tilting-card-layout($columns, $rows) {

    $column-width : calc(100% / $columns) ;
    $row-height : calc(100% / $rows);

    $x : 0deg;
    $y : 0deg;

    perspective: 500px;
    position: relative;

    transform: rotateX($x) rotateY($y);

    
    nav {
        position: absolute;
        inset: 0;
        div {
            position: absolute;
            z-index: 2;
            width: $column-width;
            height: $row-height;
            
            @for $colIndex from 0 to $columns {
                
                &:nth-of-type(#{$columns}n - #{$colIndex}){
                    right: calc($colIndex * $column-width);
                }
            }
            
            @for $rowIndex from 0 to $rows{

                $start : ($rowIndex * $rows) + 1 ;
                $end : ($rowIndex * $rows) + $rows ;
                
                &:nth-child(n + #{$start}):nth-child(-n + #{$end}){
                    z-index: 5;
                            top : calc($rowIndex * $row-height) ;
                            outline-color: aquamarine;
                        }
                        
               
                
            }

            }
        }
}


.tilting-card {
    @include tilting-card-layout(
        3, 3
        ) ;
    --perspective: 100vw;
    --rotateX: 0;
    --rotateY: 0;
    --angle: 5deg;
    
    position: relative;
    display: grid;
    text-align: center;
    transform: perspective(var(--perspective)) rotateX(var(--rotateX))
    rotateY(var(--rotateY));
    transition: transform 350ms ease;    
}
  
  
  .tilting-card:has(nav > div:nth-child(1):hover) {
    --rotateX: var(--angle);
    --rotateY: calc(var(--angle) * -1);
  }
  
  .tilting-card:has( nav > div:nth-child(2):hover) {
    --rotateX: var(--angle);
  }
  
  .tilting-card:has( nav > div:nth-child(3):hover) {
    --rotateX: var(--angle);
    --rotateY: var(--angle);
  }
  
  .tilting-card:has( nav > div:nth-child(4):hover) {
    --rotateY: calc(var(--angle) * -1);
  }
  
  .tilting-card:has( nav > div:nth-child(6):hover) {
    --rotateY: var(--angle);
  }
  
  .tilting-card:has( nav > div:nth-child(7):hover) {
    --rotateX: calc(var(--angle) * -1);
    --rotateY: calc(var(--angle) * -1);
  }
  
  .tilting-card:has( nav > div:nth-child(8):hover) {
    --rotateX: calc(var(--angle) * -1);
  }
  
  .tilting-card:has( nav > div:nth-child(9):hover) {
    --rotateX: calc(var(--angle) * -1);
    --rotateY: var(--angle);
  }
  
  
// @function tilt-angle($index){
//     $angle : 10deg ;
//     $y-angle : 0deg;
//     $x-angle : 0deg;

//     $left : (0, 3, 6);
//     $right : (2, 5, 8);

//     @if $index < 3 {
//         $x-angle : $angle;
//     }

//     @else if $index >= 6 {
//         $x-angle : calc($angle * -1)
//     } 

//     @if index($left, $index) {
//         $y : calc($angle * -1);  
//     }
//     @else if index($right, $index){
//         $y : $angle;
//     }

//     @return (
//         x : $x-angle ,
//         y : $y-angle,
//     );
// }

// @for $index from 0 to 9 {
//     .tilting-card:has( nav > div:nth-child(#{$index + 1}):hover) {
//         $values : tilt-angle(($index)) ;
//         --rotateX : map-get($values, x);
//         --rotatey : map-get($values, y);
//     }
// }